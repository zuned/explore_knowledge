<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Maps '/' requests to the 'home' view -->
	<mvc:view-controller path="/admin/login" view-name="login"/>
	
	<mvc:annotation-driven  />
	
	<context:annotation-config  />
	
	<bean id="reportingController"  class="com.zuni.reporting.web.jasper.controller.ReportingController">
		<property name="reportServiceContext" ref="reportServiceContext"></property>
	</bean>

	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonMessageConverter" />
			</list>
		</property>
	</bean>
	<context:component-scan base-package="com.zuni.serviceprovider,com.zuni.serviceprovider.service,com.zuni.reporting.web" />
	
	
	<jpa:repositories base-package="com.zuni.serviceprovider.repository" repository-impl-postfix="CustomImpl" />

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/DrivingInstructorDS" />
		<property name="resourceRef" value="true" />
	</bean>
	
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="com.mysql.jdbc.Driver"
		p:url="jdbc:mysql://localhost:3306/driving?autoReconnect=true"
		p:username="root" p:password="" /> -->
		
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.zuni.serviceprovider.domain" />
		<property name="jpaVendorAdapter">
			<bean id="jpaAdapter"
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="MYSQL" />
				<property name="showSql" value="true" />
				<property name="generateDdl" value="false" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.listeners.envers.autoRegister">false</prop>
			</props>
		</property>
	</bean>

	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
		
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<context:property-placeholder properties-ref="commonsConfigurationFactoryBean"  />

	<bean id="commonsConfigurationFactoryBean" class="org.springmodules.commons.configuration.CommonsConfigurationFactoryBean">
		<constructor-arg ref="databaseConfiguration" />
	</bean>

	<bean id="databaseConfiguration" class="org.apache.commons.configuration.DatabaseConfiguration">
		<constructor-arg type="javax.sql.DataSource" ref="dataSource" />
		<constructor-arg name="table" value="configuration" /><!-- configuration table name -->
		<constructor-arg name="keyColumn" value="property_name" /><!-- key column -->
		<constructor-arg name="valueColumn" value="property_value" /><!-- value column -->
	</bean>
	 
</beans>